import { Prisma } from ".prisma/client";
export {
  UserObject,
  UserIdFieldObject,
  UserEmailFieldObject,
  UserNameFieldObject,
  UserRoleFieldObject,
  UserPostsFieldObject,
  UserProfileFieldObject,
  createManyUserMutation,
  createOneUserMutation,
  deleteManyUserMutation,
  deleteOneUserMutation,
  updateManyUserMutation,
  updateOneUserMutation,
  upsertOneUserMutation,
  createManyUserMutationObject,
  createOneUserMutationObject,
  deleteManyUserMutationObject,
  deleteOneUserMutationObject,
  updateManyUserMutationObject,
  updateOneUserMutationObject,
  upsertOneUserMutationObject,
  findFirstUserQuery,
  findManyUserQuery,
  countUserQuery,
  findUniqueUserQuery,
  findFirstUserQueryObject,
  findManyUserQueryObject,
  countUserQueryObject,
  findUniqueUserQueryObject,
} from "./User";
export {
  ProfileObject,
  ProfileIdFieldObject,
  ProfileBioFieldObject,
  ProfileUserFieldObject,
  ProfileUserIdFieldObject,
  createManyProfileMutation,
  createOneProfileMutation,
  deleteManyProfileMutation,
  deleteOneProfileMutation,
  updateManyProfileMutation,
  updateOneProfileMutation,
  upsertOneProfileMutation,
  createManyProfileMutationObject,
  createOneProfileMutationObject,
  deleteManyProfileMutationObject,
  deleteOneProfileMutationObject,
  updateManyProfileMutationObject,
  updateOneProfileMutationObject,
  upsertOneProfileMutationObject,
  findFirstProfileQuery,
  findManyProfileQuery,
  countProfileQuery,
  findUniqueProfileQuery,
  findFirstProfileQueryObject,
  findManyProfileQueryObject,
  countProfileQueryObject,
  findUniqueProfileQueryObject,
} from "./Profile";
export {
  PostObject,
  PostIdFieldObject,
  PostCreatedAtFieldObject,
  PostUpdatedAtFieldObject,
  PostTitleFieldObject,
  PostPublishedFieldObject,
  PostAuthorFieldObject,
  PostAuthorIdFieldObject,
  PostCategoriesFieldObject,
  createManyPostMutation,
  createOnePostMutation,
  deleteManyPostMutation,
  deleteOnePostMutation,
  updateManyPostMutation,
  updateOnePostMutation,
  upsertOnePostMutation,
  createManyPostMutationObject,
  createOnePostMutationObject,
  deleteManyPostMutationObject,
  deleteOnePostMutationObject,
  updateManyPostMutationObject,
  updateOnePostMutationObject,
  upsertOnePostMutationObject,
  findFirstPostQuery,
  findManyPostQuery,
  countPostQuery,
  findUniquePostQuery,
  findFirstPostQueryObject,
  findManyPostQueryObject,
  countPostQueryObject,
  findUniquePostQueryObject,
} from "./Post";
export {
  CategoryObject,
  CategoryIdFieldObject,
  CategoryNameFieldObject,
  CategoryPostsFieldObject,
  createManyCategoryMutation,
  createOneCategoryMutation,
  deleteManyCategoryMutation,
  deleteOneCategoryMutation,
  updateManyCategoryMutation,
  updateOneCategoryMutation,
  upsertOneCategoryMutation,
  createManyCategoryMutationObject,
  createOneCategoryMutationObject,
  deleteManyCategoryMutationObject,
  deleteOneCategoryMutationObject,
  updateManyCategoryMutationObject,
  updateOneCategoryMutationObject,
  upsertOneCategoryMutationObject,
  findFirstCategoryQuery,
  findManyCategoryQuery,
  countCategoryQuery,
  findUniqueCategoryQuery,
  findFirstCategoryQueryObject,
  findManyCategoryQueryObject,
  countCategoryQueryObject,
  findUniqueCategoryQueryObject,
} from "./Category";
import { builder } from "../../lib/graphql/builder";

export const BatchPayload = builder.objectType(
  builder.objectRef<Prisma.BatchPayload>("BatchPayload"),
  {
    description: "Batch payloads from prisma.",
    fields: (t) => ({
      count: t.exposeInt("count", {
        description: "Prisma Batch Payload",
        nullable: false,
      }),
    }),
  }
);

export const modelNames = ["User", "Profile", "Post", "Category"] as const;

export type Model = (typeof modelNames)[number];
